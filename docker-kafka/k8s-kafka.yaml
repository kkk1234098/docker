---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'
    k8s.kuboard.cn/displayName: zookeeper-kafka
    k8s.kuboard.cn/ingress: 'false'
    k8s.kuboard.cn/service: none
    k8s.kuboard.cn/workload: cloud-kafka
  creationTimestamp: '2020-09-28T07:09:24Z'
  generation: 1
  labels:
    k8s.kuboard.cn/layer: cloud
    k8s.kuboard.cn/name: cloud-kafka
  managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata': {}
        'f:spec':
          'f:selector': {}
          'f:strategy': {}
          'f:template':
            'f:metadata': {}
            'f:spec':
              'f:containers':
                'k:{"name":"cloud-kafka"}':
                  'f:env': {}
                  'f:ports': {}
                'k:{"name":"cloud-zookeeper"}':
                  'f:ports': {}
      manager: Mozilla
      operation: Update
      time: '2020-09-28T07:09:24Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata': {}
        'f:status':
          'f:conditions': {}
      manager: kube-controller-manager
      operation: Update
      time: '2020-09-28T07:09:24Z'
  name: cloud-kafka
  namespace: default
  resourceVersion: '14219'
  selfLink: /apis/apps/v1/namespaces/default/deployments/cloud-kafka
  uid: 88db8638-8fa8-4fd7-868d-15fec6fa9972
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.kuboard.cn/layer: cloud
      k8s.kuboard.cn/name: cloud-kafka
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s.kuboard.cn/layer: cloud
        k8s.kuboard.cn/name: cloud-kafka
    spec:
      containers:
        - image: 'wurstmeister/zookeeper:latest'
          imagePullPolicy: IfNotPresent
          name: cloud-zookeeper
          ports:
            - containerPort: 2181
              hostPort: 2181
              name: zookeeper
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
            - name: KAFKA_BROKER_ID
              value: '0'
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: '192.168.137.195:2181/kafka'
            - name: KAFKA_ADVERTISED_LISTENERS
              value: 'PLAINTEXT://192.168.137.195:9092'
            - name: KAFKA_LISTENERS
              value: 'PLAINTEXT://0.0.0.0:9092'
          image: 'wurstmeister/kafka:latest'
          imagePullPolicy: IfNotPresent
          name: cloud-kafka
          ports:
            - containerPort: 9092
              hostPort: 9092
              name: kafka
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeName: k8s-node1
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
status:
  conditions:
    - lastTransitionTime: '2020-09-28T07:09:24Z'
      lastUpdateTime: '2020-09-28T07:09:24Z'
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: 'False'
      type: Available
    - lastTransitionTime: '2020-09-28T07:09:24Z'
      lastUpdateTime: '2020-09-28T07:09:24Z'
      message: ReplicaSet "cloud-kafka-f7cc96c98" is progressing.
      reason: ReplicaSetUpdated
      status: 'True'
      type: Progressing
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1

